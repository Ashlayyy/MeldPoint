import{aY as o,bt as e,br as l,bq as u,aZ as h}from"./index-CRgOuqdl.js";async function d(t){const s=t?`?${new URLSearchParams(t).toString()}`:"",r=`permissions-list${s}`,c=e.get(r);if(c)return{status:200,data:c};const n=await o.get(`https://ashlaydev.com/intal/api/permissions/permissions${s}`);return e.set(r,n.data.data,{ttl:5*60*1e3}),{status:n.status,data:n.data.data}}async function p(t){const s=t?`?${new URLSearchParams(t).toString()}`:"",r=`groups-list${s}`,c=e.get(r);if(c)return{status:200,data:c};const n=await o.get(`https://ashlaydev.com/intal/api/permissions/groups${s}`);return e.set(r,n.data.data,{ttl:5*60*1e3}),{status:n.status,data:n.data.data}}async function f(t){const s=t?`?${new URLSearchParams(t).toString()}`:"",r=`roles-list${s}`,c=e.get(r);if(c)return{status:200,data:c};const n=await o.get(`https://ashlaydev.com/intal/api/permissions/roles${s}`);return e.set(r,n.data.data,{ttl:5*60*1e3}),{status:n.status,data:n.data.data}}async function w(t){if(!t)throw new Error("Data is required");const s=await o.post("https://ashlaydev.com/intal/api/permissions/permission",t);return e.clear(),{status:s.status,data:s.data.data}}async function y(t){if(!t)throw new Error("Data is required");const s=await o.post("https://ashlaydev.com/intal/api/permissions/group",t);return e.clear(),{status:s.status,data:s.data.data}}async function g(t){if(!t)throw new Error("Data is required");const s=await o.post("https://ashlaydev.com/intal/api/permissions/role",t);return e.clear(),{status:s.status,data:s.data.data}}async function m(t,s){if(!t||!s)throw new Error("ID and data are required");const r=await o.patch(`https://ashlaydev.com/intal/api/permissions/permission/${t}`,s);return e.clear(),{status:r.status,data:r.data.data}}async function $(t,s){if(!t||!s)throw new Error("ID and data are required");const r=await o.patch(`https://ashlaydev.com/intal/api/permissions/group/${t}`,s);return e.clear(),{status:r.status,data:r.data.data}}async function v(t,s){if(!t||!s)throw new Error("ID and data are required");const r=await o.patch(`https://ashlaydev.com/intal/api/permissions/role/${t}`,s);return e.clear(),{status:r.status,data:r.data.data}}async function L(t){if(!t)throw new Error("ID is required");const s=await o.delete(`https://ashlaydev.com/intal/api/permissions/permission/${t}`);return e.clear(),{status:s.status,data:s.data.data}}async function R(t){if(!t)throw new Error("ID is required");const s=await o.delete(`https://ashlaydev.com/intal/api/permissions/group/${t}`);return e.clear(),{status:s.status,data:s.data.data}}async function E(t){if(!t)throw new Error("ID is required");const s=await o.delete(`https://ashlaydev.com/intal/api/permissions/role/${t}`);return e.clear(),{status:s.status,data:s.data.data}}async function D(t,s){if(!t||!s)throw new Error("User ID and Permission ID are required");const r=await o.post(`https://ashlaydev.com/intal/api/permissions/assign/user/${t}/permission/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function G(t,s){if(!t||!s)throw new Error("Role ID and Permission ID are required");const r=await o.post(`https://ashlaydev.com/intal/api/permissions/assign/role/${t}/permission/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function S(t,s){if(!t||!s)throw new Error("Group ID and Permission ID are required");const r=await o.post(`https://ashlaydev.com/intal/api/permissions/assign/group/${t}/permission/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function q(t,s){if(!t||!s)throw new Error("User ID and Permission ID are required");const r=await o.delete(`https://ashlaydev.com/intal/api/permissions/remove/user/${t}/permission/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function N(t,s){if(!t||!s)throw new Error("Role ID and Permission ID are required");const r=await o.delete(`https://ashlaydev.com/intal/api/permissions/remove/role/${t}/permission/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function P(t,s){if(!t||!s)throw new Error("Group ID and Permission ID are required");const r=await o.delete(`https://ashlaydev.com/intal/api/permissions/remove/group/${t}/permission/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function J(t,s){if(!t||!s)throw new Error("User ID and Role ID are required");const r=await o.post(`https://ashlaydev.com/intal/api/permissions/assign/user/${t}/role/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function O(t,s){if(!t||!s)throw new Error("User ID and Group ID are required");const r=await o.post(`https://ashlaydev.com/intal/api/permissions/assign/user/${t}/group/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function U(t,s){if(!t||!s)throw new Error("Role ID and Group ID are required");const r=await o.post(`https://ashlaydev.com/intal/api/permissions/assign/role/${t}/group/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function _(t,s){if(!t||!s)throw new Error("User ID and Role ID are required");const r=await o.delete(`https://ashlaydev.com/intal/api/permissions/remove/user/${t}/role/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function F(t,s){if(!t||!s)throw new Error("User ID and Group ID are required");const r=await o.delete(`https://ashlaydev.com/intal/api/permissions/remove/user/${t}/group/${s}`);return e.clear(),{status:r.status,data:r.data.data}}async function T(t,s){if(!t||!s)throw new Error("Role ID and Group ID are required");const r=await o.delete(`https://ashlaydev.com/intal/api/permissions/remove/role/${t}/group/${s}`);return e.clear(),{status:r.status,data:r.data.data}}const a=u.global.t,i=h(),I=l("permissions",{state:()=>({permissions:[],groups:[],roles:[],currentPermission:null,currentGroup:null,currentRole:null,isLoading:!1,error:null}),actions:{async fetchPermissions(t){this.isLoading=!0;try{const s=await d(t);if(s.status===200)this.permissions=s.data||[];else throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async fetchGroups(t){this.isLoading=!0;try{const s=await p(t);if(s.status===200)this.groups=s.data||[];else throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async fetchRoles(t){this.isLoading=!0;try{const s=await f(t);if(s.status===200)this.roles=s.data||[];else throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async createPermission(t){this.isLoading=!0;try{const s=await w(t);if(s.status===201)return await this.fetchPermissions(),s.data;throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.save_error",{error:s})})}finally{this.isLoading=!1}},async createGroup(t){this.isLoading=!0;try{const s=await y(t);if(s.status===201)return await this.fetchGroups(),s.data;throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.save_error",{error:s})})}finally{this.isLoading=!1}},async createRole(t){this.isLoading=!0;try{const s=await g(t);if(s.status===201)return await this.fetchRoles(),s.data;throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.save_error",{error:s})})}finally{this.isLoading=!1}},async updatePermission(t,s){this.isLoading=!0;try{const r=await m(t,s);if(r.status===200)return await this.fetchPermissions(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async updateGroup(t,s){this.isLoading=!0;try{const r=await $(t,s);if(r.status===200)return await this.fetchGroups(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async updateRole(t,s){this.isLoading=!0;try{const r=await v(t,s);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async deletePermission(t){this.isLoading=!0;try{const s=await L(t);if(s.status===200)return await this.fetchPermissions(),s.data;throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.delete_error",{error:s})})}finally{this.isLoading=!1}},async deleteGroup(t){this.isLoading=!0;try{const s=await R(t);if(s.status===200)return await this.fetchGroups(),s.data;throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.delete_error",{error:s})})}finally{this.isLoading=!1}},async deleteRole(t){this.isLoading=!0;try{const s=await E(t);if(s.status===200)return await this.fetchRoles(),s.data;throw new Error(JSON.stringify(s))}catch(s){i.error({message:a("errors.delete_error",{error:s})})}finally{this.isLoading=!1}},async assignToUser(t,s){this.isLoading=!0;try{const r=await D(t,s);if(r.status===200)return await this.fetchPermissions(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async assignToRole(t,s){this.isLoading=!0;try{const r=await G(t,s);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async assignToGroup(t,s){this.isLoading=!0;try{const r=await S(t,s);if(r.status===200)return await this.fetchGroups(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async assignRoleToUser(t,s){this.isLoading=!0;try{const r=await J(s,t);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async assignGroupToUser(t,s){this.isLoading=!0;try{const r=await O(s,t);if(r.status===200)return await this.fetchGroups(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async assignGroupToRole(t,s){this.isLoading=!0;try{const r=await U(s,t);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async removeFromUser(t,s){this.isLoading=!0;try{const r=await q(t,s);if(r.status===200)return await this.fetchPermissions(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async removeFromRole(t,s){this.isLoading=!0;try{const r=await N(s,t);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async removeFromGroup(t,s){this.isLoading=!0;try{const r=await P(t,s);if(r.status===200)return await this.fetchGroups(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async removeRoleFromUser(t,s){this.isLoading=!0;try{const r=await _(s,t);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async removeGroupFromUser(t,s){this.isLoading=!0;try{const r=await F(s,t);if(r.status===200)return await this.fetchGroups(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}},async removeGroupFromRole(t,s){this.isLoading=!0;try{const r=await T(s,t);if(r.status===200)return await this.fetchRoles(),r.data;throw new Error(JSON.stringify(r))}catch(r){i.error({message:a("errors.save_error",{error:r})})}finally{this.isLoading=!1}}},getters:{getPermissionById:t=>s=>t.permissions.find(r=>r.id===s),getGroupById:t=>s=>t.groups.find(r=>r.id===s),getRoleById:t=>s=>t.roles.find(r=>r.id===s)}});export{I as u};
