import{aY as d,br as h,W as u,aZ as D,bq as E}from"./index-5wn-0GR-.js";async function S(){try{const r=await d.get("/department");return{status:r.status,data:r.data.data}}catch(r){throw console.error("Error fetching departments:",r),r}}async function N(r){try{const t=await d.get(`/department/${r}`);return{status:t.status,data:t.data.data}}catch(t){throw console.error(`Error fetching department ${r}:`,t),t}}async function P(r){try{const t=await d.post("/department",r);return{status:t.status,data:t.data.data}}catch(t){throw console.error("Error creating department:",t),t}}async function $(r,t){try{const a=await d.patch(`/department/${r}`,t);return{status:a.status,data:a.data.data}}catch(a){throw console.error(`Error updating department ${r}:`,a),a}}async function F(r){try{const t=await d.delete(`/department/${r}`);return{status:t.status,data:t.data.data}}catch(t){throw console.error(`Error deleting department ${r}:`,t),t}}const i=E.global.t,O=h("department",()=>{const r=u([]),t=u(null),a=u(!1),n=u(null),m=u(!1),o=D();async function l(){a.value=!0,n.value=null;try{const s=await S();if(s.status===200)r.value=s.data;else throw new Error(JSON.stringify(s))}catch(s){n.value=s instanceof Error?s.message:"Failed to fetch departments",o.error({message:i("errors.fetch_error",{error:s})})}finally{a.value=!1}}function p(){r.value=[],n.value=null}async function f(s){a.value=!0,n.value=null;try{const e=await N(s);if(e.status===200)return t.value=e.data,e.data;throw new Error(JSON.stringify(e))}catch(e){n.value=e instanceof Error?e.message:"Failed to fetch department",o.error({message:i("errors.fetch_error",{error:e})})}finally{a.value=!1}}async function g(s){o.promise({message:i("admin.departments.creating")}),a.value=!0,n.value=null;try{const e=await P(s);if(e.status===201)return await l(),o.resolvePromise({message:i("admin.departments.created")}),e.data;throw new Error(JSON.stringify(e))}catch(e){n.value=e instanceof Error?e.message:"Failed to create department",o.rejectPromise({message:i("errors.save_error",{error:e})})}finally{a.value=!1}}async function y(s,e){a.value=!0,n.value=null,o.promise({message:i("admin.departments.updating")});try{const c=await $(s,e);if(c.status===200)return await l(),o.resolvePromise({message:i("admin.departments.updated")}),c.data;throw new Error(JSON.stringify(c))}catch(c){n.value=c instanceof Error?c.message:"Failed to update department",o.rejectPromise({message:i("errors.save_error",{error:c})})}finally{a.value=!1}}async function v(s){a.value=!0,n.value=null,o.promise({message:i("admin.departments.deleting")});try{const e=await F(s);if(e.status===200)return await l(),o.resolvePromise({message:i("admin.departments.deleted")}),e.data;throw new Error(JSON.stringify(e))}catch(e){n.value=e instanceof Error?e.message:"Failed to delete department",o.rejectPromise({message:i("errors.delete_error",{error:e})})}finally{a.value=!1}}async function w(){m.value||(await l(),m.value=!0)}return{departments:r,currentDepartment:t,isLoading:a,error:n,initialized:m,fetchDepartments:l,clearDepartments:p,getDepartmentById:f,createDepartment:g,updateDepartment:y,deleteDepartment:v,initializeData:w}});export{O as u};
