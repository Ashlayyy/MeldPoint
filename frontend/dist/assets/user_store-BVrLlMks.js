import{br as i,bq as o,aZ as n,cy as c,cz as l,cA as f,cB as h,cC as g,cD as d,cE as u}from"./index-CRgOuqdl.js";const t=o.global.t,a=n(),U=i("user",{state:()=>({users:[],currentUsers:[],filterUsers:[],isLoading:!1,error:null,pagination:{total:0,pages:0,currentPage:1}}),actions:{async fetchUsers(r){this.isLoading=!0;try{const s=await u(r);if(s.status===200){const e=s.data;this.users=e.users||[],this.pagination={total:e.total,pages:e.pages,currentPage:e.currentPage}}else throw new Error(JSON.stringify(s))}catch(s){a.error({message:t("errors.fetch_error",{error:s})}),this.users=[]}finally{this.isLoading=!1}},async fetchFilterUsers(){this.isLoading=!0;try{const r=await d();if(r.status===200){const s=r.data;this.filterUsers=s||[]}else throw new Error(JSON.stringify(r))}catch(r){a.error({message:t("errors.fetch_error",{error:r})}),this.filterUsers=[]}finally{this.isLoading=!1}},async searchUsers(r){this.isLoading=!0;try{const s=await g(r);if(s.status===200)this.currentUsers=s.data||[];else throw new Error(JSON.stringify(s))}catch(s){a.error({message:t("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async getUsersByRole(r){this.isLoading=!0;try{const s=await h(r);if(s.status===200)this.currentUsers=s.data||[];else throw new Error(JSON.stringify(s))}catch(s){a.error({message:t("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async getUsersByDepartment(r){this.isLoading=!0;try{const s=await f(r);if(s.status===200)this.currentUsers=s.data||[];else throw new Error(JSON.stringify(s))}catch(s){a.error({message:t("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async deleteUser(r){this.isLoading=!0;try{await l(r),await this.fetchUsers()}catch(s){a.error({message:t("errors.fetch_error",{error:s})})}finally{this.isLoading=!1}},async updateUserDepartment(r,s){a.promise({message:t("admin.users.department_updated")}),this.isLoading=!0;try{const e=await c(r,s);if(e.status===200)await this.fetchUsers({limit:2e4}),a.resolvePromise({message:t("admin.users.department_updated")});else throw new Error(JSON.stringify(e))}catch(e){a.rejectPromise({message:t("errors.save_error",{error:e})})}finally{this.isLoading=!1}}},getters:{getUserById:r=>s=>r.users.find(e=>e.id===s),getUserByIdForPDCA:r=>s=>r.filterUsers.find(e=>e.id===s),getUserByIdFromFilterUsers:r=>s=>r.filterUsers.find(e=>e.id===s)}});export{U as u};
