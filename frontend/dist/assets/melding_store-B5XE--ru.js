import{bt as c,aY as i,br as p,bw as y,bx as m,bq as w,aZ as R}from"./index-CRgOuqdl.js";const I="/header-bullet.svg";async function g(e=!1){const s="all-reports",t=c.get(s);if(t&&!e)return{status:200,data:t};const a=await i.get("https://ashlaydev.com/intal/api/melding");return c.set(s,a.data.data,{ttl:60*1e3}),{status:a.status,data:a.data.data}}async function F(e,s=!1){if(!e)throw new Error("ID is required");const t=`report-${e}`,a=c.get(t);if(a&&!s)return{status:200,data:a};const r=await i.get(`https://ashlaydev.com/intal/api/melding/${e}`);return c.set(t,r.data.data,{ttl:5*60*1e3}),{status:r.status,data:r.data.data}}async function v(e,s=!1){if(!e)throw new Error("Volgnummer is required");const t=`report-${e}`,a=c.get(t);if(a&&!s)return{status:200,data:a};const r=await i.get(`https://ashlaydev.com/intal/api/melding/volgnummer/${e}`);return c.set(t,r.data.data,{ttl:5*60*1e3}),{status:r.status,data:r.data.data}}async function C(e){if(!e)throw new Error("Data is required");const s=await i.post("https://ashlaydev.com/intal/api/melding",e);return{status:s.status,data:s.data.data}}async function h(e,s){if(!e||!s)throw new Error("ID and data are required");console.log("A2- UpdateReport from Mleding.ts going to happen"),console.log("data",s);const t=await i.patch(`https://ashlaydev.com/intal/api/melding/${e}`,s);return{status:t.status,data:t.data}}async function S(e,s){if(!e||!s)throw new Error("Both meldingID and cloneID are required");const t=await i.post(`https://ashlaydev.com/intal/api/melding/clone/${e}/${s}`);return{status:t.status,data:t.data.data}}async function q(e,s){if(!e||!s)throw new Error("Both meldingID and correspondence are required");const t=await i.patch(`https://ashlaydev.com/intal/api/melding/correspondence/${e}`,{correspondence:s});return{status:t.status,data:t.data.data}}async function D(e,s){if(!e||!s)throw new Error("Both meldingID and correspondenceID are required");const t=await i.delete(`https://ashlaydev.com/intal/api/melding/correspondence/${e}/${s}`);return{status:t.status,data:t.data.data}}async function N(e){if(!e)throw new Error("FileKey is required");const s=await i.delete(`https://ashlaydev.com/intal/api/melding/deleteFile/${e}`);return{status:s.status,data:s.data.data}}async function $(e){if(!e)throw new Error("PreventiefID is required");const s=await i.get(`https://ashlaydev.com/intal/api/melding/preventief/${e}`);return{status:s.status,data:s.data.data}}async function f(){const e=await i.get("https://ashlaydev.com/intal/api/melding/fetch/lengths");return{status:e.status,data:e.data.data}}async function E(e,s){const t={ids:e,archived:s};return{status:(await i.post("https://ashlaydev.com/intal/api/batch/archive",t)).status}}const o=w.global.t,l=R(),d=m();const z=p("melding",{state:()=>({reports:[],selectedFormId:"",selectedForm:null,loading:{single:!1,all:!1},lengths:{all:0,ops:0,correctief:0,pdca:0,archived:0,financed:0},initialized:!1,currentLoadingId:null,reportCache:new Map,pendingRequests:new Map,refreshTimeout:null,refreshInProgress:!1,initializationPromise:null}),getters:{pdcaReports:e=>{var r;const s=(r=e.reports)==null?void 0:r.filter(n=>n.Type==="Melding"&&n.Archived===!1&&n.PDCA===!0);s.sort((n,u)=>Number(n.VolgNummer)-Number(u.VolgNummer));const t=new Set;return s.filter(n=>{var u;return(u=n.Preventief)!=null&&u.id?t.has(n.Preventief.id)?!1:(t.add(n.Preventief.id),!0):!0}).sort((n,u)=>Number(u.VolgNummer)-Number(n.VolgNummer))},getReportById:e=>s=>e.reports.find(t=>t.id===s),getReportByVolgNummer:e=>s=>{if(e.reportCache.has(s))return e.reportCache.get(s);const t=e.reports.find(a=>Number(a.VolgNummer)===Number(s));return t&&e.reportCache.set(s,t),t}},actions:{async initialize(){if(!this.initialized)return this.loading.all=!0,this.initializationPromise?this.initializationPromise:(this.initializationPromise=d.executeRequest("melding","initialization",async()=>{try{const[e,s]=await Promise.all([f(),g(!1)]);s.status===200&&(this.reports=s.data),e.status===200&&(this.lengths=e.data),this.initialized=!0}catch(e){throw e}finally{this.initializationPromise=null,this.loading.all=!1}}),this.initializationPromise)},async initializeData(){return this.initialize()},refreshData:y.debounce(async function(){return this.initialized?d.executeRequest("melding","refresh",async()=>{const[e,s]=await Promise.all([g(!1),f()]);e.status===200&&(this.reports=e.data),s.status===200&&(this.lengths=s.data)}):this.initialize()},1e3),async fetchSingleReport(e){return d.executeRequest("melding",`fetch-report-${e}`,async()=>{this.loading.single=!0;try{const s=this.reportCache.get(e);if(s)return this.selectedForm=s,s;const t=await v(e);if(t.status===200){const a=t.data;return this.selectedForm=a,this.reportCache.set(e,a),this.reports.find(r=>r.VolgNummer===e)||(this.reports=[...this.reports,a]),a}return null}catch(s){return l.error({message:o("errors.fetch_error",{error:s})}),null}finally{this.loading.single=!1}})},async fetchReports(e=!1){return!e&&!this.initialized?this.initialize():d.executeRequest("melding","fetchReports",async()=>{this.loading.all=!0;try{const s=await g(e);return s.status===200&&(this.reports=s.data),s}finally{this.loading.all=!1}})},async fetchReportById(e,s=!1){this.loading.single=!0;try{const t=await F(e,s);if(t.status===200)return t.data;throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.fetch_error",{error:t})})}finally{this.loading.single=!1}},async addReport(e){return d.executeRequest("melding","addReport",async()=>{this.loading.single=!0;try{const s=await C(e);if(s.status===201)return await this.refreshData(),c.clear(),s;throw new Error(JSON.stringify(s))}finally{this.loading.single=!1}})},async updateReport(e,s){return d.executeRequest("melding",`updateReport-${e}`,async()=>{this.loading.single=!0;try{const t=await h(e,s);if(t.status===200)return await this.refreshData(),c.remove(`report-${e}`),this.selectedForm=t.data.data,t;throw new Error(JSON.stringify(t))}finally{this.loading.single=!1}})},async linkStatusMelding(e,s){this.loading.single=!0;try{const t=await h(e,{StatusID:s});if(t.status===200)return this.selectedForm=t.data.data,{status:t.status,data:t.data.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.link_error",{error:t})})}finally{this.loading.single=!1}},async linkActiehouderMelding(e,s){this.loading.single=!0;try{const t=await h(e,{ActiehouderID:s});if(t.status===200)return this.selectedForm=t.data.data,{status:t.status,data:t.data.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.link_error",{error:t})})}finally{this.loading.single=!1}},async linkPreventief(e,s){this.loading.single=!0;try{const t=await h(e,{PreventiefID:s});if(t.status===200)return this.selectedForm=t.data.data,{status:t.status,data:t.data.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.link_error",{error:t})})}finally{this.loading.single=!1}},async linkCorrectief(e,s){this.loading.single=!0;try{const t=await h(e,{CorrectiefID:s});if(t.status===200)return this.selectedForm=t.data.data,{status:t.status,data:t.data.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.link_error",{error:t})})}finally{this.loading.single=!1}},async linkProject(e,s){this.loading.single=!0;try{const t=await h(e,{ProjectID:s});if(t.status===200)return this.selectedForm=t.data.data,{status:t.status,data:t.data.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.link_error",{error:t})})}finally{this.loading.single=!1}},async archiveReport(e,s=!0){return d.executeRequest("melding","archive",async()=>{this.loading.single=!0;try{const t=await E(e,s);if(t.status===200)return this.reports=[],this.selectedForm=null,await this.refreshData(),t;throw new Error(JSON.stringify(t))}finally{this.loading.single=!1}})},async removeCorrespondence(e,s){return d.executeRequest("melding","removeCorrespondence",async()=>{this.loading.single=!0;try{const t=await D(e,s);if(t.status===200)return this.selectedForm=t.data,{status:t.status,data:t.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.save_error",{error:t})})}finally{this.loading.single=!1}})},async addCorrespondence(e,s){return d.executeRequest("melding","addCorrespondence",async()=>{this.loading.single=!0;try{const t=await q(e,s);if(t.status===200)return this.selectedForm=t.data,{status:t.status,data:t.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.save_error",{error:t})})}finally{this.loading.single=!1}})},async addMeldingToPDCA(e){return d.executeRequest("melding","addMeldingToPDCA",async()=>{this.loading.single=!0;try{const s=await $(e);if(s.status===200)return this.selectedForm=s.data,{status:s.status,data:s.data};throw new Error(JSON.stringify(s))}catch(s){l.error({message:o("errors.save_error",{error:s})})}finally{this.loading.single=!1}})},async addCloneID(e,s){return d.executeRequest("melding","addCloneID",async()=>{this.loading.single=!0;try{const t=await S(e,s);if(t.status===200)return this.selectedForm=t.data.data,{status:t.status,data:t.data.data};throw new Error(JSON.stringify(t))}catch(t){l.error({message:o("errors.save_error",{error:t})})}finally{this.loading.single=!1}})},async updateCurrentForm(e=!1){this.selectedForm=await this.fetchReportById(this.selectedFormId,e)},setSelectedFormId(e){this.selectedFormId=e},setSelectedForm(e){this.selectedForm=e,e!=null&&e.VolgNummer&&this.reportCache.set(e.VolgNummer,e)},clearCache(){this.reportCache.clear()}}});export{N as D,g as G,h as U,I as _,z as u};
