import{aY as r,br as f,bq as u,aZ as d,bx as l}from"./index-5wn-0GR-.js";const a={async getTasks(){const e=await r.get("/tasks");return{data:e.data.data||e.data,status:e.status}},async getTasksCurrentUser(){const e=await r.get("/tasks/currentUser");return{data:e.data.data||e.data,status:e.status}},async getTasksByUserId(e){const t=await r.get(`/tasks/user/${e}`);return{data:t.data.data||t.data,status:t.status}},async getTasksByCorrectief(e){const t=await r.get(`/tasks/correctief/${e}`);return{data:t.data.data||t.data,status:t.status}},async getTasksByPreventief(e){const t=await r.get(`/tasks/preventief/${e}`);return{data:t.data.data||t.data,status:t.status}},async createTask(e){const t=await r.post("/tasks",e);return{data:t.data.data||t.data,status:t.status}},async updateTask(e,t){const s=await r.put(`/tasks/${e}`,t);return{data:s.data,status:s.status}},async deleteTask(e){return{status:(await r.delete(`/tasks/${e}`)).status}},async completeTodo(e){const t=await r.put(`/tasks/${e}/complete`);return{data:t.data,status:t.status}},async uncompleteTodo(e){const t=await r.put(`/tasks/${e}/uncomplete`);return{data:t.data,status:t.status}},async findTasksByIds(e){const t=await r.post("/tasks/findByID",{ids:e});return{data:t.data.data||t.data,status:t.status}}},c=u.global.t,o=d(),i=l(),y=f("tasks",{state:()=>({correctiefTasks:new Map,preventiefTasks:new Map,currentUserTasks:new Map,uncompletedTasks:new Map,completedTasks:new Map,loading:!1,error:null}),getters:{getTaskById:e=>t=>e.correctiefTasks.get(t)||e.preventiefTasks.get(t),getAllTasks:e=>Array.from(e.correctiefTasks.values()).concat(Array.from(e.preventiefTasks.values())),getTasksByUserId:e=>t=>[...Array.from(e.correctiefTasks.values()),...Array.from(e.preventiefTasks.values())].filter(s=>s.userId===t)},actions:{async createTask(e){return i.executeRequest("tasks","createTask",async()=>{this.loading=!0;try{const t={message:e.message,userId:e.userId,action:e.action,actionType:e.actionType||"task",category:e.category||(e.targetId&&e.targetId.startsWith("prev")?"preventief":"correctief"),level:e.level??0,url:e.url,deadline:e.deadline,finished:e.finished??!1};e.category==="preventief"&&e.targetId?t.preventiefId=e.targetId:e.category==="correctief"&&e.targetId&&(t.correctiefId=e.targetId);const{data:s}=await a.createTask(t);return s.category==="correctief"?this.correctiefTasks.set(s.id,s):s.category==="preventief"?this.preventiefTasks.set(s.id,s):s.correctiefId?this.correctiefTasks.set(s.id,s):s.preventiefId?this.preventiefTasks.set(s.id,s):this.correctiefTasks.set(s.id,s),s}catch(t){throw o.error({message:c("errors.create_error",{error:t})}),t}finally{this.loading=!1}})},async updateTask(e,t,s){return i.executeRequest("tasks",`updateTask-${e}`,async()=>{this.loading=!0;try{const{data:n}=await a.updateTask(e,s);if(t==="correctief")this.correctiefTasks.set(e,n);else if(t==="preventief")this.preventiefTasks.set(e,n);else throw new Error("Invalid action type");return n}catch(n){throw this.error=n,n}finally{this.loading=!1}})},async deleteTask(e,t){return i.executeRequest("tasks",`deleteTask-${e}`,async()=>{this.loading=!0;try{await a.deleteTask(e),t==="correctief"?this.correctiefTasks.delete(e):t==="preventief"?this.preventiefTasks.delete(e):(this.correctiefTasks.delete(e),this.preventiefTasks.delete(e))}catch(s){throw o.error({message:c("errors.delete_error",{error:s})}),s}finally{this.loading=!1}})},async fetchTasksCurrentUser(){return i.executeRequest("tasks","fetchCurrentUser",async()=>{this.loading=!0;try{const{data:e}=await a.getTasksCurrentUser();e.forEach(t=>{this.currentUserTasks.set(t.id,t),t.completedAt?this.completedTasks.set(t.id,t):this.uncompletedTasks.set(t.id,t)})}catch(e){throw o.error({message:c("errors.fetch_error",{error:e})}),e}finally{this.loading=!1}})},async fetchAllTasks(){return i.executeRequest("tasks","fetchAll",async()=>{this.loading=!0;try{const{data:e}=await a.getTasks();this.correctiefTasks.clear(),this.preventiefTasks.clear(),e.forEach(t=>{t.category==="correctief"?this.correctiefTasks.set(t.id,t):t.category==="preventief"&&this.preventiefTasks.set(t.id,t)})}catch(e){throw this.error=e,e}finally{this.loading=!1}})},async fetchTasksByUserId(e){return i.executeRequest("tasks",`fetchTasksByUserId-${e}`,async()=>{this.loading=!0;try{const{data:t}=await a.getTasksByUserId(e);return t.forEach(s=>{s.category==="correctief"||!s.category&&s.correctiefId?this.correctiefTasks.set(s.id,s):s.category==="preventief"||!s.category&&s.preventiefId?this.preventiefTasks.set(s.id,s):this.correctiefTasks.set(s.id,s)}),t}catch(t){throw this.error=t,t}finally{this.loading=!1}})},async fetchTasksByPreventief(e){this.loading=!0;try{const{data:t}=await a.getTasksByPreventief(e);return t.forEach(s=>{this.preventiefTasks.set(s.id,s)}),t}catch(t){throw this.error=t,t}finally{this.loading=!1}},async fetchTasksByCorrectief(e){return i.executeRequest("tasks",`fetchTasksByCorrectief-${e}`,async()=>{this.loading=!0;try{const{data:t}=await a.getTasksByCorrectief(e);return t.forEach(s=>{this.correctiefTasks.set(s.id,s)}),t}catch(t){throw this.error=t,t}finally{this.loading=!1}})},async findByIds(e){return i.executeRequest("tasks","findByIds",async()=>{this.loading=!0;try{const{data:t}=await a.findTasksByIds(e);return t}catch(t){throw this.error=t,t}finally{this.loading=!1}})}}});export{y as u};
