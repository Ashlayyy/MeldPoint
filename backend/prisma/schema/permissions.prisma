model Permission {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  name         String           @unique
  description  String?
  action       PermissionAction
  resourceType ResourceType
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  userPermissions          UsersOnPermissions[]
  rolePermissions          RolesOnPermissions[]
  permissionGroupRelations PermissionGroupsOnPermissions[]
  User                     User?                           @relation(fields: [userId], references: [id])
  userId                   String?                         @db.ObjectId
}

model PermissionGroup {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  permissions PermissionGroupsOnPermissions[]
  roles       RolesOnPermissionGroups[]
  userGroups  UsersOnPermissionGroups[]
  User        User?                           @relation(fields: [userId], references: [id])
  userId      String?                         @db.ObjectId
}

model Role {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  department  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userRoles            UsersOnRoles[]
  rolePermissions      RolesOnPermissions[]
  rolePermissionGroups RolesOnPermissionGroups[]
  User                 User?                     @relation(fields: [userId], references: [id])
  userId               String?                   @db.ObjectId
}

// Junction Tables
model UsersOnPermissions {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  userId       String     @db.ObjectId
  permissionId String     @db.ObjectId
  assignedAt   DateTime   @default(now())

  @@unique([userId, permissionId])
}

model UsersOnRoles {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  role       Role     @relation(fields: [roleId], references: [id])
  userId     String   @db.ObjectId
  roleId     String   @db.ObjectId
  assignedAt DateTime @default(now())

  @@unique([userId, roleId])
}

model UsersOnPermissionGroups {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  user       User            @relation(fields: [userId], references: [id])
  group      PermissionGroup @relation(fields: [groupId], references: [id])
  userId     String          @db.ObjectId
  groupId    String          @db.ObjectId
  assignedAt DateTime        @default(now())

  @@unique([userId, groupId])
}

model RolesOnPermissions {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  roleId       String     @db.ObjectId
  permissionId String     @db.ObjectId
  assignedAt   DateTime   @default(now())

  @@unique([roleId, permissionId])
}

model PermissionGroupsOnPermissions {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  group        PermissionGroup @relation(fields: [groupId], references: [id])
  permission   Permission      @relation(fields: [permissionId], references: [id])
  groupId      String          @db.ObjectId
  permissionId String          @db.ObjectId
  assignedAt   DateTime        @default(now())

  @@unique([groupId, permissionId])
}

model RolesOnPermissionGroups {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  role       Role            @relation(fields: [roleId], references: [id])
  group      PermissionGroup @relation(fields: [groupId], references: [id])
  roleId     String          @db.ObjectId
  groupId    String          @db.ObjectId
  assignedAt DateTime        @default(now())

  @@unique([roleId, groupId])
}
